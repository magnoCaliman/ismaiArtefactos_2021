* AULA 01.1 - 01/MAR

** Material
- Kit de componentes
  - https://mauser.pt/catalog/product_info.php?cPath=1667_2842&products_id=096-6785
- Arduino
  - https://mauser.pt/catalog/product_info.php?cPath=1667_2602_1668&products_id=096-2435
- Cabo USB tipo B - "cabo de impressora"
  - https://www.cmple.com/content/images/thumbs/usb-2-0-a-male-to-b-male-cable-6-feet-black_NID0011125.jpeg
  - *Não incluso no kit!*

- Obrigatoriedade de video no Teams
  - Webcam ou OBS.Ninja - https://obs.ninja/

** Horário para retirada no CITEI
- 02/03/2021 (3a-feira) - 14h00 às 16h00
- 03/03/2021 (4a-feira) - 16h30 às 18h00
* AULA 01.2 - 02/MAR

** Hardware Hacking && Circuit Bending
- Sesame Street - https://www.youtube.com/watch?v=ZAsDVb18MJ4
- Cat Piano - https://www.youtube.com/watch?v=dBB-pBIaieg
- Video Camera - https://www.youtube.com/watch?v=6fVqs3pxQHQ
- Game Boy - https://www.youtube.com/watch?v=FuxTNxym07s
- Nintendo - https://www.youtube.com/watch?v=kHMf14CHWHI

- Nicolas Collins - https://www.youtube.com/watch?v=TjbGSgCopNk
- Intro to Circuit Bending - https://www.youtube.com/watch?v=kJfTdD_5XyE
- Reed Ghazala - https://www.youtube.com/watch?v=KHDL9iGxDPM

** Eletrônica Básica
*** Conceitos
- Circuito
  - Dispositivos eletrônicos precisam, para funcionar, de um /circuito fechado/. Um circuito aberto é um circuito infeliz.
- Polaridade
  - Alguns componentes eletrônicos pressupõe que a eletricidade está a fluir em uma /direção específica/. Outros, nem tanto.
- Condutividade
  - Qualquer coisa é capaz de /conduzir eletricidade/ (até você). Mas certos materiais fazem isso melhor que outros.
  - 10.000 volts wood burning experiment - https://www.youtube.com/watch?v=PFMo5aicurc
- Tensão
  - Todo circuito espera uma "/quantidade/" certa de eletricidade fluindo entre os polos positivo e negativo. Por vezes, não há problemas em operar acima ou abaixo desse valor ideal (um engenheiro vai te dizer o contrário...)
  - Exploding electronic components in HD - https://www.youtube.com/watch?v=JCPXckfT-6g
* AULA 02.1 - 08/MAR
- Continuação discussão Aula 01.2

* AULA 02.2 - 09/MAR
** 1. O que é?
  - https://www.arduino.cc/

Ecossistema (circuito + linguagem de programação + IDE) que nos permite criar lógicas computacionais para interfacear/controlar hardware e software.

- O que dá para fazer?
  - Coin slot detector: https://www.instructables.com/id/coin-slot-detector/
  - Geiger counter: https://www.cooking-hacks.com/documentation/tutorials/geiger-counter-radiation-sensor-board-arduino-raspberry-pi-tutorial
  - Beat slicer: https://vimeo.com/45422593 / https://vimeo.com/48347752
  - Cabinet of Curiosness: https://youtu.be/JCiXV6b7N0A
  - Et cetera - https://www.instructables.com/howto/arduino/

Plataforma open source. Você pode montar o seu em casa (e vender!) e isso nada tem de ilegal.

** 2. Instalação
 - Baixar nesse link: https://www.arduino.cc/en/software
 - *NÃO* usar a versão "ZIP file", e sim o instalador, conforme instruções no [[https://www.arduino.cc/en/Guide/Windows][guia de instalação]]:

#+begin_quote
 Get the latest version from the download page. You can choose between the Installer (.exe) and the Zip packages. *We suggest you use the first one that installs directly everything you need to use the Arduino Software (IDE), including the drivers*. With the Zip package you need to install the drivers manually.
#+end_quote

** 3. Blink
1. Abra uma janela nova da IDE do Arduino, delete tudo que lá está, copie e cole o código abaixo
2. Selecione a placa e porta corretas em ~Tools -> Board~ e ~Tools -> Port~
   1. Placa? Porta? 
3. Salve o arquivo
4. Faça upload
   1. Upload para onde?

*** 3.1 Código
#+begin_src c
int pinoLed = 13;

void setup()
{
  pinMode(pinoLed, OUTPUT);
}

void loop()
{
  digitalWrite(pinoLed, HIGH);
  delay(1000);
  digitalWrite(pinoLed, LOW);
  delay(500);  
} 
#+end_src

*** 3.2 Comentários
- Estrutura de pastas
- Convenção de nomenclatura
- Onde está o circuito?

*** 3.3 Modificações
- Que estruturas de código és capaz de reconhecer nesse exemplo?
- O que é possível de modificar, sem alterar o circuito?

** 4. Anotações das últimas duas aulas:

[[./assets/aula02_1-notas.png]]
* AULA 03.1 - 15/MAR
** 1.1 Vocabulário de Blink
- ~int~
- ~=~
- ~void setup(){}~
- ~void loop(){}~
- ~pinMode()~
  - ~OUTPUT~
- ~digitalWrite()~
  - ~HIGH~ / ~LOW~
- ~delay()~

*** 1.2 Documentação
 - Regra #0 em programação: RTFM
   - https://www.arduino.cc/reference/en/

** 2. Comentários
- Para /escrita/ de pinos, eles podem ser encarados como mini-fichas de 5V (no Arduino UNO), controladas via código.
#+begin_quote
When reading or writing to a digital pin there are only two possible values a pin can take/be-set-to: ~HIGH~ and ~LOW~.\\
Defining Pin Levels: HIGH and LOW - https://www.arduino.cc/reference/en/language/variables/constants/constants/
#+end_quote

* AULA 03.2 - 16/MAR
** 1. Protoboard
- Ex.1
  - Energia elétrica flui na horizontal por entre as linhas superiores e inferiores, e na vertical por entre as colunas.
  - Topo e fundo *não* estão conectados entre sí!
[[./assets/aula03_2-ex1.png]]

- Ex.2
  - Código "Blink" da aula passada, agora no pino 7
  - Por que não resulta?
[[./assets/aula03_2-ex2.png]]
** 2. Componentes
*** 2.1 LED
- Light Emiting Diode
- Precisa de ~2V (varia de acordo com o [[https://www.circuitbread.com/ee-faq/the-forward-voltages-of-different-leds][material e a cor]]).
- Polarizado: recebe tensão na perna maior ("/anodo/"), e conecta GND na perna menor ("/catodo/").
*** 2.2 Resistor
- Diminui a quantidade de tensão no circuito. Faz LED sobreviver bateria de 9V!
- Valor medido em Ω (ohms). Quanto maior o valor, maior a resistência elétrica. Vossos kits possuem resistências de 220Ω, 1KΩ e 10KΩ.
- Não polarizado.
- Calcular o valor exato de resistência necessária, no nosso caso, não será tão importante.
  - Para os interessados: [[https://www.fluke.com/en-us/learn/blog/electrical/what-is-ohms-law][Lei de Ohms]]

- Ex.3
[[./assets/aula03_2-ex3.png]]

** 3. Blink (certo!) na protoboard
- Ex.4
[[./assets/aula03_2-ex4.png]]
** 4. Ground compartilhado
- Muitas vezes vários componentes do circuito /compartilham o mesmo ground/. Ou seja, o negativo da nossa alimentação de energia (pino GND do Arduino) está conectado em vários lugares /ao mesmo tempo/.
- Ex.5
*** Código
#+begin_src c
int pinoLed_R1 = 7;
int pinoLed_R2 = 8;

void setup()
{
  pinMode(pinoLed_R1, OUTPUT);
  pinMode(pinoLed_R2, OUTPUT);
}

void loop()
{
  digitalWrite(pinoLed_R1, HIGH);
  digitalWrite(pinoLed_R2, HIGH);
  delay(1000);
  digitalWrite(pinoLed_R1, LOW);
  digitalWrite(pinoLed_R2, LOW);
  delay(500);
} 
#+end_src
*** Circuito
[[./assets/aula03_2-ex5.png]]
** 5. TPC
Construir circuito na protoboard e implementar código para reproduzir os comportamentos demonstrados abaixo:
*** 5.1 - alternaPisca
[[./assets/aula03_2-tpc1.gif]]
*** 5.2 - linhaLed
[[./assets/aula03_2-tpc2.gif]]
- Obs: para esse segundo TPC, é necessário o uso de duas estruturas computacionais já estudadas em outros semestres: arrays e loops ~for~. Consulte a documentação do Arduino para saber as sintaxes corretas (algumas são idênticas ao Processing...)
- Data de entrega - 23/03
*** 5.3 - Formatos de entrega
- Upload na opção "Entrega de trabalhos" do portal. 
- Arquivo do código, com comentários ao topo especificando a qual aula exercício se refere, e contendo link de YouTube para video de demonstração do circuito a funcionar:

#+begin_src c
//AULA 02 - BLINK
//https://www.youtube.com/watch?v=dQw4w9WgXcQ

int pinoLed = 13;

void setup()
{
  pinMode(pinoLed, OUTPUT);
}

void loop()
{
  digitalWrite(pinoLed, HIGH);
  delay(1000);
  digitalWrite(pinoLed, LOW);
  delay(500);  
} 
#+end_src
* AULA 04.1 - 22/MAR
- Dúvidas TPC da aula 03.2
- Reforçar: formato de entrega é via upload do *arquivo* de código.
* AULA 04.2 - 23/MAR
** 1. Piezo buzzer
- Cristal piezo-elétrico
  - Piezoelectricity - why hitting crystals makes electricity - https://www.youtube.com/watch?v=wcJXA8IqYl8
  - DIY contact mic - https://www.youtube.com/watch?v=aOJuCYgmPPE
- Polarizado (mas não liga muito pra isso...)
*** 1.1 Ativo vs. passivo
- Experimente o seguinte circuito, usando o sketch /Blink/, com os dois diferentes buzzers contidos no kit:
  - Obs: por razão de simplicidade, a protoboard não está demonstrada no gráfico. Mas é necessária para a construção.
[[./assets/aula04_1-ex1.png]]
- Qual a diferença de comportamento?
** 2. ~tone()~
- Ex.1
#+begin_src c
int pinoPiezzo = 5;

void setup()
{
  pinMode(pinoPiezzo, OUTPUT);
}

void loop()
{
  tone(pinoPiezzo, 200);
}
#+end_src

- Ex.2 - agora vários sons em sequência
#+begin_src c
int pinoPiezzo = 5;
int duracaoSom = 90;
int tempoPausa = 100;

void setup()
{
  pinMode(pinoPiezzo, OUTPUT);
}

void loop()
{
  tone(pinoPiezzo, 100, duracaoSom);
  delay(tempoPausa);
  tone(pinoPiezzo, 200, duracaoSom);
  delay(tempoPausa);
  tone(pinoPiezzo, 300, duracaoSom);
  delay(tempoPausa);
  tone(pinoPiezzo, 400, duracaoSom);
  delay(tempoPausa);
}
#+end_src

- Que valores de frequência escolher?
  - Razões perfeitas (dobro, metade, 1/3, etc)
  - Progressões geométricas e/ou aritméticas
  - Notas musicas: https://pages.mtu.edu/~suits/notefreqs.html
  - [[https://www.arduino.cc/reference/en/language/functions/random-numbers/random/][Qualquer um...]]

** 3. TPC
*** 3.1 - strangerThings
Ouça [[https://www.youtube.com/watch?v=-RcPZdihrp4][essa música]]. Sabendo que a frequência em Hertz das notas que compõe a melodia principal são ~{130, 164, 196, 246, 260, 246, 196, 164}~, crie circuito usando o buzzer e a função ~tone()~ que reproduza essa melodia.
*** 3.2 - soundLight
Experimente livremente com os conceitos até aqui vistos, e crie circuito que propõe integração entre luz e som.
